/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PageHashKnownDto
 */
export interface PageHashKnownDto {
    /**
     * 
     * @type {string}
     * @memberof PageHashKnownDto
     */
    hash: string;
    /**
     * 
     * @type {number}
     * @memberof PageHashKnownDto
     */
    size?: number;
    /**
     * 
     * @type {string}
     * @memberof PageHashKnownDto
     */
    action: PageHashKnownDtoActionEnum;
    /**
     * 
     * @type {number}
     * @memberof PageHashKnownDto
     */
    deleteCount: number;
    /**
     * 
     * @type {number}
     * @memberof PageHashKnownDto
     */
    matchCount: number;
    /**
     * 
     * @type {Date}
     * @memberof PageHashKnownDto
     */
    created: Date;
    /**
     * 
     * @type {Date}
     * @memberof PageHashKnownDto
     */
    lastModified: Date;
}


/**
 * @export
 */
export const PageHashKnownDtoActionEnum = {
    DeleteAuto: 'DELETE_AUTO',
    DeleteManual: 'DELETE_MANUAL',
    Ignore: 'IGNORE'
} as const;
export type PageHashKnownDtoActionEnum = typeof PageHashKnownDtoActionEnum[keyof typeof PageHashKnownDtoActionEnum];


/**
 * Check if a given object implements the PageHashKnownDto interface.
 */
export function instanceOfPageHashKnownDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "hash" in value;
    isInstance = isInstance && "action" in value;
    isInstance = isInstance && "deleteCount" in value;
    isInstance = isInstance && "matchCount" in value;
    isInstance = isInstance && "created" in value;
    isInstance = isInstance && "lastModified" in value;

    return isInstance;
}

export function PageHashKnownDtoFromJSON(json: any): PageHashKnownDto {
    return PageHashKnownDtoFromJSONTyped(json, false);
}

export function PageHashKnownDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PageHashKnownDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hash': json['hash'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'action': json['action'],
        'deleteCount': json['deleteCount'],
        'matchCount': json['matchCount'],
        'created': (new Date(json['created'])),
        'lastModified': (new Date(json['lastModified'])),
    };
}

export function PageHashKnownDtoToJSON(value?: PageHashKnownDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hash': value.hash,
        'size': value.size,
        'action': value.action,
        'deleteCount': value.deleteCount,
        'matchCount': value.matchCount,
        'created': (value.created.toISOString()),
        'lastModified': (value.lastModified.toISOString()),
    };
}

