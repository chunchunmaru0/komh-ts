/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReadListRequestBookMatchSeriesDto
 */
export interface ReadListRequestBookMatchSeriesDto {
    /**
     * 
     * @type {string}
     * @memberof ReadListRequestBookMatchSeriesDto
     */
    seriesId: string;
    /**
     * 
     * @type {string}
     * @memberof ReadListRequestBookMatchSeriesDto
     */
    title: string;
    /**
     * 
     * @type {Date}
     * @memberof ReadListRequestBookMatchSeriesDto
     */
    releaseDate?: Date;
}

/**
 * Check if a given object implements the ReadListRequestBookMatchSeriesDto interface.
 */
export function instanceOfReadListRequestBookMatchSeriesDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "seriesId" in value;
    isInstance = isInstance && "title" in value;

    return isInstance;
}

export function ReadListRequestBookMatchSeriesDtoFromJSON(json: any): ReadListRequestBookMatchSeriesDto {
    return ReadListRequestBookMatchSeriesDtoFromJSONTyped(json, false);
}

export function ReadListRequestBookMatchSeriesDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReadListRequestBookMatchSeriesDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'seriesId': json['seriesId'],
        'title': json['title'],
        'releaseDate': !exists(json, 'releaseDate') ? undefined : (new Date(json['releaseDate'])),
    };
}

export function ReadListRequestBookMatchSeriesDtoToJSON(value?: ReadListRequestBookMatchSeriesDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'seriesId': value.seriesId,
        'title': value.title,
        'releaseDate': value.releaseDate === undefined ? undefined : (value.releaseDate.toISOString().substring(0,10)),
    };
}

