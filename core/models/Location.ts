/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Location
 */
export interface Location {
    /**
     * 
     * @type {Array<string>}
     * @memberof Location
     */
    fragments: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof Location
     */
    progression?: number;
    /**
     * 
     * @type {number}
     * @memberof Location
     */
    position?: number;
    /**
     * 
     * @type {number}
     * @memberof Location
     */
    totalProgression?: number;
}

/**
 * Check if a given object implements the Location interface.
 */
export function instanceOfLocation(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "fragments" in value;

    return isInstance;
}

export function LocationFromJSON(json: any): Location {
    return LocationFromJSONTyped(json, false);
}

export function LocationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Location {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fragments': json['fragments'],
        'progression': !exists(json, 'progression') ? undefined : json['progression'],
        'position': !exists(json, 'position') ? undefined : json['position'],
        'totalProgression': !exists(json, 'totalProgression') ? undefined : json['totalProgression'],
    };
}

export function LocationToJSON(value?: Location | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fragments': value.fragments,
        'progression': value.progression,
        'position': value.position,
        'totalProgression': value.totalProgression,
    };
}

