/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PageHashCreationDto
 */
export interface PageHashCreationDto {
    /**
     * 
     * @type {string}
     * @memberof PageHashCreationDto
     */
    hash: string;
    /**
     * 
     * @type {number}
     * @memberof PageHashCreationDto
     */
    size?: number;
    /**
     * 
     * @type {string}
     * @memberof PageHashCreationDto
     */
    action: PageHashCreationDtoActionEnum;
}


/**
 * @export
 */
export const PageHashCreationDtoActionEnum = {
    DeleteAuto: 'DELETE_AUTO',
    DeleteManual: 'DELETE_MANUAL',
    Ignore: 'IGNORE'
} as const;
export type PageHashCreationDtoActionEnum = typeof PageHashCreationDtoActionEnum[keyof typeof PageHashCreationDtoActionEnum];


/**
 * Check if a given object implements the PageHashCreationDto interface.
 */
export function instanceOfPageHashCreationDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "hash" in value;
    isInstance = isInstance && "action" in value;

    return isInstance;
}

export function PageHashCreationDtoFromJSON(json: any): PageHashCreationDto {
    return PageHashCreationDtoFromJSONTyped(json, false);
}

export function PageHashCreationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PageHashCreationDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hash': json['hash'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'action': json['action'],
    };
}

export function PageHashCreationDtoToJSON(value?: PageHashCreationDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hash': value.hash,
        'size': value.size,
        'action': value.action,
    };
}

