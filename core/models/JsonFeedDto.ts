/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ItemDto } from './ItemDto';
import {
    ItemDtoFromJSON,
    ItemDtoFromJSONTyped,
    ItemDtoToJSON,
} from './ItemDto';

/**
 * 
 * @export
 * @interface JsonFeedDto
 */
export interface JsonFeedDto {
    /**
     * 
     * @type {string}
     * @memberof JsonFeedDto
     */
    version: string;
    /**
     * 
     * @type {string}
     * @memberof JsonFeedDto
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof JsonFeedDto
     */
    homePageUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof JsonFeedDto
     */
    description?: string;
    /**
     * 
     * @type {Array<ItemDto>}
     * @memberof JsonFeedDto
     */
    items: Array<ItemDto>;
}

/**
 * Check if a given object implements the JsonFeedDto interface.
 */
export function instanceOfJsonFeedDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "items" in value;

    return isInstance;
}

export function JsonFeedDtoFromJSON(json: any): JsonFeedDto {
    return JsonFeedDtoFromJSONTyped(json, false);
}

export function JsonFeedDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): JsonFeedDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'version': json['version'],
        'title': json['title'],
        'homePageUrl': !exists(json, 'home_page_url') ? undefined : json['home_page_url'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'items': ((json['items'] as Array<any>).map(ItemDtoFromJSON)),
    };
}

export function JsonFeedDtoToJSON(value?: JsonFeedDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': value.version,
        'title': value.title,
        'home_page_url': value.homePageUrl,
        'description': value.description,
        'items': ((value.items as Array<any>).map(ItemDtoToJSON)),
    };
}

