/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HistoricalEventDto
 */
export interface HistoricalEventDto {
    /**
     * 
     * @type {string}
     * @memberof HistoricalEventDto
     */
    type: string;
    /**
     * 
     * @type {Date}
     * @memberof HistoricalEventDto
     */
    timestamp: Date;
    /**
     * 
     * @type {string}
     * @memberof HistoricalEventDto
     */
    bookId?: string;
    /**
     * 
     * @type {string}
     * @memberof HistoricalEventDto
     */
    seriesId?: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof HistoricalEventDto
     */
    properties: { [key: string]: string; };
}

/**
 * Check if a given object implements the HistoricalEventDto interface.
 */
export function instanceOfHistoricalEventDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "timestamp" in value;
    isInstance = isInstance && "properties" in value;

    return isInstance;
}

export function HistoricalEventDtoFromJSON(json: any): HistoricalEventDto {
    return HistoricalEventDtoFromJSONTyped(json, false);
}

export function HistoricalEventDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): HistoricalEventDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'timestamp': (new Date(json['timestamp'])),
        'bookId': !exists(json, 'bookId') ? undefined : json['bookId'],
        'seriesId': !exists(json, 'seriesId') ? undefined : json['seriesId'],
        'properties': json['properties'],
    };
}

export function HistoricalEventDtoToJSON(value?: HistoricalEventDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'timestamp': (value.timestamp.toISOString()),
        'bookId': value.bookId,
        'seriesId': value.seriesId,
        'properties': value.properties,
    };
}

