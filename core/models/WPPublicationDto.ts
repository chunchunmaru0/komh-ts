/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WPLinkDto } from './WPLinkDto';
import {
    WPLinkDtoFromJSON,
    WPLinkDtoFromJSONTyped,
    WPLinkDtoToJSON,
} from './WPLinkDto';
import type { WPMetadataDto } from './WPMetadataDto';
import {
    WPMetadataDtoFromJSON,
    WPMetadataDtoFromJSONTyped,
    WPMetadataDtoToJSON,
} from './WPMetadataDto';

/**
 * 
 * @export
 * @interface WPPublicationDto
 */
export interface WPPublicationDto {
    /**
     * 
     * @type {string}
     * @memberof WPPublicationDto
     */
    context?: string;
    /**
     * 
     * @type {WPMetadataDto}
     * @memberof WPPublicationDto
     */
    metadata: WPMetadataDto;
    /**
     * 
     * @type {Array<WPLinkDto>}
     * @memberof WPPublicationDto
     */
    links: Array<WPLinkDto>;
    /**
     * 
     * @type {Array<WPLinkDto>}
     * @memberof WPPublicationDto
     */
    images: Array<WPLinkDto>;
    /**
     * 
     * @type {Array<WPLinkDto>}
     * @memberof WPPublicationDto
     */
    readingOrder: Array<WPLinkDto>;
    /**
     * 
     * @type {Array<WPLinkDto>}
     * @memberof WPPublicationDto
     */
    resources: Array<WPLinkDto>;
    /**
     * 
     * @type {Array<WPLinkDto>}
     * @memberof WPPublicationDto
     */
    toc: Array<WPLinkDto>;
    /**
     * 
     * @type {Array<WPLinkDto>}
     * @memberof WPPublicationDto
     */
    landmarks: Array<WPLinkDto>;
    /**
     * 
     * @type {Array<WPLinkDto>}
     * @memberof WPPublicationDto
     */
    pageList: Array<WPLinkDto>;
}

/**
 * Check if a given object implements the WPPublicationDto interface.
 */
export function instanceOfWPPublicationDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadata" in value;
    isInstance = isInstance && "links" in value;
    isInstance = isInstance && "images" in value;
    isInstance = isInstance && "readingOrder" in value;
    isInstance = isInstance && "resources" in value;
    isInstance = isInstance && "toc" in value;
    isInstance = isInstance && "landmarks" in value;
    isInstance = isInstance && "pageList" in value;

    return isInstance;
}

export function WPPublicationDtoFromJSON(json: any): WPPublicationDto {
    return WPPublicationDtoFromJSONTyped(json, false);
}

export function WPPublicationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): WPPublicationDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'context': !exists(json, 'context') ? undefined : json['context'],
        'metadata': WPMetadataDtoFromJSON(json['metadata']),
        'links': ((json['links'] as Array<any>).map(WPLinkDtoFromJSON)),
        'images': ((json['images'] as Array<any>).map(WPLinkDtoFromJSON)),
        'readingOrder': ((json['readingOrder'] as Array<any>).map(WPLinkDtoFromJSON)),
        'resources': ((json['resources'] as Array<any>).map(WPLinkDtoFromJSON)),
        'toc': ((json['toc'] as Array<any>).map(WPLinkDtoFromJSON)),
        'landmarks': ((json['landmarks'] as Array<any>).map(WPLinkDtoFromJSON)),
        'pageList': ((json['pageList'] as Array<any>).map(WPLinkDtoFromJSON)),
    };
}

export function WPPublicationDtoToJSON(value?: WPPublicationDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'context': value.context,
        'metadata': WPMetadataDtoToJSON(value.metadata),
        'links': ((value.links as Array<any>).map(WPLinkDtoToJSON)),
        'images': ((value.images as Array<any>).map(WPLinkDtoToJSON)),
        'readingOrder': ((value.readingOrder as Array<any>).map(WPLinkDtoToJSON)),
        'resources': ((value.resources as Array<any>).map(WPLinkDtoToJSON)),
        'toc': ((value.toc as Array<any>).map(WPLinkDtoToJSON)),
        'landmarks': ((value.landmarks as Array<any>).map(WPLinkDtoToJSON)),
        'pageList': ((value.pageList as Array<any>).map(WPLinkDtoToJSON)),
    };
}

