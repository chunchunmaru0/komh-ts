/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReadProgressDto
 */
export interface ReadProgressDto {
    /**
     * 
     * @type {number}
     * @memberof ReadProgressDto
     */
    page: number;
    /**
     * 
     * @type {boolean}
     * @memberof ReadProgressDto
     */
    completed: boolean;
    /**
     * 
     * @type {Date}
     * @memberof ReadProgressDto
     */
    readDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof ReadProgressDto
     */
    created: Date;
    /**
     * 
     * @type {Date}
     * @memberof ReadProgressDto
     */
    lastModified: Date;
    /**
     * 
     * @type {string}
     * @memberof ReadProgressDto
     */
    deviceId: string;
    /**
     * 
     * @type {string}
     * @memberof ReadProgressDto
     */
    deviceName: string;
}

/**
 * Check if a given object implements the ReadProgressDto interface.
 */
export function instanceOfReadProgressDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "page" in value;
    isInstance = isInstance && "completed" in value;
    isInstance = isInstance && "readDate" in value;
    isInstance = isInstance && "created" in value;
    isInstance = isInstance && "lastModified" in value;
    isInstance = isInstance && "deviceId" in value;
    isInstance = isInstance && "deviceName" in value;

    return isInstance;
}

export function ReadProgressDtoFromJSON(json: any): ReadProgressDto {
    return ReadProgressDtoFromJSONTyped(json, false);
}

export function ReadProgressDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReadProgressDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'page': json['page'],
        'completed': json['completed'],
        'readDate': (new Date(json['readDate'])),
        'created': (new Date(json['created'])),
        'lastModified': (new Date(json['lastModified'])),
        'deviceId': json['deviceId'],
        'deviceName': json['deviceName'],
    };
}

export function ReadProgressDtoToJSON(value?: ReadProgressDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'page': value.page,
        'completed': value.completed,
        'readDate': (value.readDate.toISOString()),
        'created': (value.created.toISOString()),
        'lastModified': (value.lastModified.toISOString()),
        'deviceId': value.deviceId,
        'deviceName': value.deviceName,
    };
}

