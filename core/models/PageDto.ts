/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PageDto
 */
export interface PageDto {
    /**
     * 
     * @type {number}
     * @memberof PageDto
     */
    number: number;
    /**
     * 
     * @type {string}
     * @memberof PageDto
     */
    fileName: string;
    /**
     * 
     * @type {string}
     * @memberof PageDto
     */
    mediaType: string;
    /**
     * 
     * @type {number}
     * @memberof PageDto
     */
    width?: number;
    /**
     * 
     * @type {number}
     * @memberof PageDto
     */
    height?: number;
    /**
     * 
     * @type {number}
     * @memberof PageDto
     */
    sizeBytes?: number;
    /**
     * 
     * @type {string}
     * @memberof PageDto
     */
    size: string;
}

/**
 * Check if a given object implements the PageDto interface.
 */
export function instanceOfPageDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "number" in value;
    isInstance = isInstance && "fileName" in value;
    isInstance = isInstance && "mediaType" in value;
    isInstance = isInstance && "size" in value;

    return isInstance;
}

export function PageDtoFromJSON(json: any): PageDto {
    return PageDtoFromJSONTyped(json, false);
}

export function PageDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PageDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'number': json['number'],
        'fileName': json['fileName'],
        'mediaType': json['mediaType'],
        'width': !exists(json, 'width') ? undefined : json['width'],
        'height': !exists(json, 'height') ? undefined : json['height'],
        'sizeBytes': !exists(json, 'sizeBytes') ? undefined : json['sizeBytes'],
        'size': json['size'],
    };
}

export function PageDtoToJSON(value?: PageDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'number': value.number,
        'fileName': value.fileName,
        'mediaType': value.mediaType,
        'width': value.width,
        'height': value.height,
        'sizeBytes': value.sizeBytes,
        'size': value.size,
    };
}

