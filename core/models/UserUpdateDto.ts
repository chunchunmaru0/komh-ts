/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AgeRestrictionUpdateDto } from './AgeRestrictionUpdateDto';
import {
    AgeRestrictionUpdateDtoFromJSON,
    AgeRestrictionUpdateDtoFromJSONTyped,
    AgeRestrictionUpdateDtoToJSON,
} from './AgeRestrictionUpdateDto';
import type { SharedLibrariesUpdateDto } from './SharedLibrariesUpdateDto';
import {
    SharedLibrariesUpdateDtoFromJSON,
    SharedLibrariesUpdateDtoFromJSONTyped,
    SharedLibrariesUpdateDtoToJSON,
} from './SharedLibrariesUpdateDto';

/**
 * 
 * @export
 * @interface UserUpdateDto
 */
export interface UserUpdateDto {
    /**
     * 
     * @type {Set<string>}
     * @memberof UserUpdateDto
     */
    roles?: Set<string>;
    /**
     * 
     * @type {AgeRestrictionUpdateDto}
     * @memberof UserUpdateDto
     */
    ageRestriction?: AgeRestrictionUpdateDto;
    /**
     * 
     * @type {Set<string>}
     * @memberof UserUpdateDto
     */
    labelsAllow?: Set<string>;
    /**
     * 
     * @type {Set<string>}
     * @memberof UserUpdateDto
     */
    labelsExclude?: Set<string>;
    /**
     * 
     * @type {SharedLibrariesUpdateDto}
     * @memberof UserUpdateDto
     */
    sharedLibraries?: SharedLibrariesUpdateDto;
}

/**
 * Check if a given object implements the UserUpdateDto interface.
 */
export function instanceOfUserUpdateDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserUpdateDtoFromJSON(json: any): UserUpdateDto {
    return UserUpdateDtoFromJSONTyped(json, false);
}

export function UserUpdateDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserUpdateDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'roles': !exists(json, 'roles') ? undefined : json['roles'],
        'ageRestriction': !exists(json, 'ageRestriction') ? undefined : AgeRestrictionUpdateDtoFromJSON(json['ageRestriction']),
        'labelsAllow': !exists(json, 'labelsAllow') ? undefined : json['labelsAllow'],
        'labelsExclude': !exists(json, 'labelsExclude') ? undefined : json['labelsExclude'],
        'sharedLibraries': !exists(json, 'sharedLibraries') ? undefined : SharedLibrariesUpdateDtoFromJSON(json['sharedLibraries']),
    };
}

export function UserUpdateDtoToJSON(value?: UserUpdateDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'roles': value.roles === undefined ? undefined : Array.from(value.roles as Set<any>),
        'ageRestriction': AgeRestrictionUpdateDtoToJSON(value.ageRestriction),
        'labelsAllow': value.labelsAllow === undefined ? undefined : Array.from(value.labelsAllow as Set<any>),
        'labelsExclude': value.labelsExclude === undefined ? undefined : Array.from(value.labelsExclude as Set<any>),
        'sharedLibraries': SharedLibrariesUpdateDtoToJSON(value.sharedLibraries),
    };
}

