/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthenticationActivityDto
 */
export interface AuthenticationActivityDto {
    /**
     * 
     * @type {string}
     * @memberof AuthenticationActivityDto
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthenticationActivityDto
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthenticationActivityDto
     */
    ip?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthenticationActivityDto
     */
    userAgent?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AuthenticationActivityDto
     */
    success: boolean;
    /**
     * 
     * @type {string}
     * @memberof AuthenticationActivityDto
     */
    error?: string;
    /**
     * 
     * @type {Date}
     * @memberof AuthenticationActivityDto
     */
    dateTime: Date;
    /**
     * 
     * @type {string}
     * @memberof AuthenticationActivityDto
     */
    source?: string;
}

/**
 * Check if a given object implements the AuthenticationActivityDto interface.
 */
export function instanceOfAuthenticationActivityDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "success" in value;
    isInstance = isInstance && "dateTime" in value;

    return isInstance;
}

export function AuthenticationActivityDtoFromJSON(json: any): AuthenticationActivityDto {
    return AuthenticationActivityDtoFromJSONTyped(json, false);
}

export function AuthenticationActivityDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthenticationActivityDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'ip': !exists(json, 'ip') ? undefined : json['ip'],
        'userAgent': !exists(json, 'userAgent') ? undefined : json['userAgent'],
        'success': json['success'],
        'error': !exists(json, 'error') ? undefined : json['error'],
        'dateTime': (new Date(json['dateTime'])),
        'source': !exists(json, 'source') ? undefined : json['source'],
    };
}

export function AuthenticationActivityDtoToJSON(value?: AuthenticationActivityDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userId': value.userId,
        'email': value.email,
        'ip': value.ip,
        'userAgent': value.userAgent,
        'success': value.success,
        'error': value.error,
        'dateTime': (value.dateTime.toISOString()),
        'source': value.source,
    };
}

