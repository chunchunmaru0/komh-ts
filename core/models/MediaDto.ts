/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MediaDto
 */
export interface MediaDto {
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    mediaType: string;
    /**
     * 
     * @type {number}
     * @memberof MediaDto
     */
    pagesCount: number;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    comment: string;
    /**
     * 
     * @type {boolean}
     * @memberof MediaDto
     */
    epubDivinaCompatible: boolean;
    /**
     * 
     * @type {string}
     * @memberof MediaDto
     */
    mediaProfile: string;
}

/**
 * Check if a given object implements the MediaDto interface.
 */
export function instanceOfMediaDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "mediaType" in value;
    isInstance = isInstance && "pagesCount" in value;
    isInstance = isInstance && "comment" in value;
    isInstance = isInstance && "epubDivinaCompatible" in value;
    isInstance = isInstance && "mediaProfile" in value;

    return isInstance;
}

export function MediaDtoFromJSON(json: any): MediaDto {
    return MediaDtoFromJSONTyped(json, false);
}

export function MediaDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': json['status'],
        'mediaType': json['mediaType'],
        'pagesCount': json['pagesCount'],
        'comment': json['comment'],
        'epubDivinaCompatible': json['epubDivinaCompatible'],
        'mediaProfile': json['mediaProfile'],
    };
}

export function MediaDtoToJSON(value?: MediaDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'mediaType': value.mediaType,
        'pagesCount': value.pagesCount,
        'comment': value.comment,
        'epubDivinaCompatible': value.epubDivinaCompatible,
        'mediaProfile': value.mediaProfile,
    };
}

