/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReadListDto
 */
export interface ReadListDto {
    /**
     * 
     * @type {string}
     * @memberof ReadListDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ReadListDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ReadListDto
     */
    summary: string;
    /**
     * 
     * @type {boolean}
     * @memberof ReadListDto
     */
    ordered: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof ReadListDto
     */
    bookIds: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof ReadListDto
     */
    createdDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof ReadListDto
     */
    lastModifiedDate: Date;
    /**
     * 
     * @type {boolean}
     * @memberof ReadListDto
     */
    filtered: boolean;
}

/**
 * Check if a given object implements the ReadListDto interface.
 */
export function instanceOfReadListDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "summary" in value;
    isInstance = isInstance && "ordered" in value;
    isInstance = isInstance && "bookIds" in value;
    isInstance = isInstance && "createdDate" in value;
    isInstance = isInstance && "lastModifiedDate" in value;
    isInstance = isInstance && "filtered" in value;

    return isInstance;
}

export function ReadListDtoFromJSON(json: any): ReadListDto {
    return ReadListDtoFromJSONTyped(json, false);
}

export function ReadListDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReadListDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'summary': json['summary'],
        'ordered': json['ordered'],
        'bookIds': json['bookIds'],
        'createdDate': (new Date(json['createdDate'])),
        'lastModifiedDate': (new Date(json['lastModifiedDate'])),
        'filtered': json['filtered'],
    };
}

export function ReadListDtoToJSON(value?: ReadListDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'summary': value.summary,
        'ordered': value.ordered,
        'bookIds': value.bookIds,
        'createdDate': (value.createdDate.toISOString()),
        'lastModifiedDate': (value.lastModifiedDate.toISOString()),
        'filtered': value.filtered,
    };
}

