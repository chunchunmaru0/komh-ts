/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  JsonFeedDto,
  ValidationErrorResponse,
} from '../models/index';
import {
    JsonFeedDtoFromJSON,
    JsonFeedDtoToJSON,
    ValidationErrorResponseFromJSON,
    ValidationErrorResponseToJSON,
} from '../models/index';

export interface MarkAnnouncementsReadRequest {
    requestBody: Set<string>;
}

/**
 * 
 */
export class AnnouncementControllerApi extends runtime.BaseAPI {

    /**
     */
    async getAnnouncementsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JsonFeedDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/announcements`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => JsonFeedDtoFromJSON(jsonValue));
    }

    /**
     */
    async getAnnouncements(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JsonFeedDto> {
        const response = await this.getAnnouncementsRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async markAnnouncementsReadRaw(requestParameters: MarkAnnouncementsReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.requestBody === null || requestParameters.requestBody === undefined) {
            throw new runtime.RequiredError('requestBody','Required parameter requestParameters.requestBody was null or undefined when calling markAnnouncementsRead.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/announcements`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.requestBody,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async markAnnouncementsRead(requestParameters: MarkAnnouncementsReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.markAnnouncementsReadRaw(requestParameters, initOverrides);
    }

}
