/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  SettingsDto,
  SettingsUpdateDto,
  ValidationErrorResponse,
} from '../models/index';
import {
    SettingsDtoFromJSON,
    SettingsDtoToJSON,
    SettingsUpdateDtoFromJSON,
    SettingsUpdateDtoToJSON,
    ValidationErrorResponseFromJSON,
    ValidationErrorResponseToJSON,
} from '../models/index';

export interface UpdateSettingsRequest {
    settingsUpdateDto: SettingsUpdateDto;
}

/**
 * 
 */
export class SettingsControllerApi extends runtime.BaseAPI {

    /**
     */
    async getSettingsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SettingsDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/settings`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SettingsDtoFromJSON(jsonValue));
    }

    /**
     */
    async getSettings(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SettingsDto> {
        const response = await this.getSettingsRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async updateSettingsRaw(requestParameters: UpdateSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.settingsUpdateDto === null || requestParameters.settingsUpdateDto === undefined) {
            throw new runtime.RequiredError('settingsUpdateDto','Required parameter requestParameters.settingsUpdateDto was null or undefined when calling updateSettings.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/settings`,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: SettingsUpdateDtoToJSON(requestParameters.settingsUpdateDto),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async updateSettings(requestParameters: UpdateSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.updateSettingsRaw(requestParameters, initOverrides);
    }

}
