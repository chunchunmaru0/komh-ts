/* tslint:disable */
/* eslint-disable */
/**
 * Komga API
 * Komga offers 2 APIs: REST and OPDS.  Both APIs are secured using HTTP Basic Authentication.
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DirectoryListingDto,
  DirectoryRequestDto,
  ValidationErrorResponse,
} from '../models/index';
import {
    DirectoryListingDtoFromJSON,
    DirectoryListingDtoToJSON,
    DirectoryRequestDtoFromJSON,
    DirectoryRequestDtoToJSON,
    ValidationErrorResponseFromJSON,
    ValidationErrorResponseToJSON,
} from '../models/index';

export interface GetDirectoryListingRequest {
    directoryRequestDto?: DirectoryRequestDto;
}

/**
 * 
 */
export class FileSystemControllerApi extends runtime.BaseAPI {

    /**
     */
    async getDirectoryListingRaw(requestParameters: GetDirectoryListingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DirectoryListingDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/filesystem`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DirectoryRequestDtoToJSON(requestParameters.directoryRequestDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DirectoryListingDtoFromJSON(jsonValue));
    }

    /**
     */
    async getDirectoryListing(requestParameters: GetDirectoryListingRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DirectoryListingDto> {
        const response = await this.getDirectoryListingRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
